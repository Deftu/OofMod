plugins {
    id "dev.architectury.architectury-pack200" version "0.1.3"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "gg.essential.loom" version "0.10.0.0"
    id "net.kyori.blossom" version "1.3.0"
    id "java"
}

archivesBaseName = projectName
version = projectVersion
group = projectGroup

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

loom {
    launchConfigs {
        client {
            arg("--tweakClass", "gg.essential.loader.stage0.EssentialSetupTweaker")
        }
    }

    runConfigs {
        client {
            ideConfigGenerated = true
        }
    }

    forge {
        pack200Provider = new dev.architectury.pack200.java.Pack200Adapter()
    }
}

blossom {
    replaceToken("@VERSION@", projectVersion)
    replaceToken("@NAME@", projectName)
    replaceToken("@ID@", projectId)
}

repositories {
    mavenCentral()
    maven { url("https://repo.sk1er.club/repository/maven-public/") }
    maven { url("https://repo.spongepowered.org/maven/") }
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

dependencies {
    minecraft("com.mojang:minecraft:1.8.9")
    mappings("de.oceanlabs.mcp:mcp_stable:22-1.8.9")
    forge("net.minecraftforge:forge:1.8.9-11.15.1.2318-1.8.9")

    shade("gg.essential:loader-launchwrapper:1.1.3")
    compileOnly("gg.essential:essential-1.8.9-forge:1788")

    compileOnly("org.spongepowered:mixin:0.8.5-SNAPSHOT")
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property("version", project.version)
    inputs.property("mcversion", "1.8.9")

    from(sourceSets.main.resources.srcDirs) {
        include("mcmod.info")
        expand(
                "version": project.version,
                "mcversion": "1.8.9"
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude("mcmod.info")
    }
}

jar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
jar.manifest.attributes("TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker")
jar.from(configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }) {
    exclude 'club.sk1er.vigilance.example.ExampleMod', 'dummyThing'
    def i = 0
    filesMatching("META-INF/NOTICE*") { name = "$name.${i++}" }
    filesMatching("META-INF/LICENSE*") { name = "$name.${i++}" }
    filesMatching("META-INF/mods.toml") { name = "$name.${i++}" }
    filesMatching("LICENSE*") { name = "$name.${i++}" }
}